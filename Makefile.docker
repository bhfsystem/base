SHELL = bash
CACHE = http://$(CACHE_VIP):3128
DOCKER = $(CACHE_VIP):5000

container = block-$(shell basename $(shell dirname $(PWD)))

docker:
	docker build -t $(DOCKER)/$(container) --build-arg http_proxy="$(CACHE)" $(opt) .

sshd:
	docker run -d -ti -v /vagrant:/vagrant --name $(container) -p :22 $(DOCKER)/$(container)
	docker exec -u ubuntu $(container) bash -c "echo $$(head -1 ~/.ssh/authorized_keys) | tee ~/.ssh/authorized_keys"

image:
	docker commit $(container) $(DOCKER)/$(container) $(opt)

publish:
	docker push $(DOCKER)/$(container)

daemon:
	$(MAKE) clean
	$(MAKE) sshd

home:
	ssh-keygen -R '[localhost]:$(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort')'
	echo "Host *" | ssh -A -p $(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort') -o StrictHostKeyChecking=no ubuntu@localhost -- tee .ssh/config
	echo "StrictHostKeyChecking no" | ssh -A -p $(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort') ubuntu@localhost -- tee -a .ssh/config
	ssh -A -p $(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort') ubuntu@localhost -- env GIT_CACHE=1 http_proxy=$(http_proxy) https_proxy=$(https_proxy) ssh_gateway=$(ssh_gateway) ssh_gateway_user=$(LOGNAME) git clone $(shell git config --local remote.origin.url) home
	ssh -A -p $(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort') ubuntu@localhost -- mv home/.git .
	ssh -A -p $(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort') ubuntu@localhost -- rm -rf home
	ssh -A -p $(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort') ubuntu@localhost -- git reset --hard

deploy:
	ssh -A -p $(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort') -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ubuntu@localhost -- env GIT_CACHE=1 http_proxy=$(http_proxy) https_proxy=$(https_proxy) ssh_gateway=$(ssh_gateway) ssh_gateway_user=$(LOGNAME) script/cibuild

ssh:
	@ssh -t -A -p $(shell docker inspect $(container) | jq -r '.[].NetworkSettings.Ports["22/tcp"][].HostPort') -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ubuntu@localhost

enter:
	docker exec -ti -u ubuntu $(container) bash -il

clean:
	docker rm -f $(container) 2>/dev/null || true
